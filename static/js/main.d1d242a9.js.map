{"version":3,"file":"static/js/main.d1d242a9.js","mappings":"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","sources":["firebase/firebase.js","nav/HomeTopNav.js","nav/ScreenNav.js","pages/HomePage.js","pages/TeamPage.js","components/Web/WebImageSelector.js","components/ImageSelector.js","components/Modals/TypeModal.js","components/Modals/ElementModal.js","components/Selection.js","components/Fonts/Header1.js","components/Web/WebTeamCreator.js","components/TeamsDropDown.js","pages/SettingsPage.js","components/DrawerNav.js","components/Button.js","components/Modals/SideModal.js","components/Modals/SignUpModal.js","pages/SignInPage.js","firebase/AuthenticationHook.js","pages/AccountHomePage.js","stacks/AccountStack.js","pages/TeamsHome.js","stacks/TeamStack.js","nav/AppNav.js","App.js","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/create fake namespace object","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import { initializeApp } from 'firebase/app';\r\nimport { getAnalytics } from \"firebase/analytics\";\r\nimport { getAuth, reactNativeLocalPersistence } from \"firebase/auth\";\r\nimport 'firebase/auth';\r\n// Optionally import the services that you want to use\r\n// import {...} from \"firebase/auth\";\r\n// import {...} from \"firebase/database\";\r\n// import {...} from \"firebase/firestore\";\r\n// import {...} from \"firebase/functions\";\r\n// import {...} from \"firebase/storage\";\r\n\r\n// Initialize Firebase\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyB11rCMsZptrYioGUVkRiV9spyYcOcQAyk\",\r\n  authDomain: \"expoapp-c2d68.firebaseapp.com\",\r\n  projectId: \"expoapp-c2d68\",\r\n  storageBucket: \"expoapp-c2d68.appspot.com\",\r\n  messagingSenderId: \"739050153049\",\r\n  appId: \"1:739050153049:web:3aa20fb67a58a74dc5fd48\",\r\n  measurementId: \"G-9KKNQQZFZ2\"\r\n};\r\n\r\n\r\nconst app = initializeApp(firebaseConfig);\r\n// For more information on how to access Firebase in your project,\r\n// see the Firebase documentation: https://firebase.google.com/docs/web/setup#access-firebase\r\nconst auth = getAuth(app);\r\n\r\nexport default app;","import * as React from 'react';\r\nimport { Text, View, TouchableOpacity, StyleSheet, Dimensions, Platform, } from 'react-native';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createMaterialTopTabNavigator } from '@react-navigation/material-top-tabs';\r\nimport { useState } from 'react';\r\nimport WebView from 'react-native-webview';\r\nimport Constants from 'expo-constants';\r\n\r\n\r\n\r\nfunction HomeTopNav() {\r\n    const [flexDirection, setflexDirection] = useState('column');\r\n    let wiki = 'https://gbf.wiki/Main_Page';\r\n    let gw = 'https://xn--bck3aza1a2if6kra4ee0hf.gamewith.jp/';\r\n    let expo = 'https://expo.dev';\r\n    const contentWidth = Dimensions.get(\"screen\").width * 1;\r\n    const [website, setWebSite] = useState(expo);\r\n\r\n    function UpdateURI(flexDirection) {\r\n        console.log(flexDirection);\r\n        switch (flexDirection) {\r\n            case 'GBF Wiki':\r\n                setWebSite(wiki);\r\n                break;\r\n            case 'GameWith':\r\n                setWebSite(gw);\r\n                break;\r\n        }\r\n        console.log(flexDirection);\r\n    }\r\n\r\n    const TabData = ({\r\n        label,\r\n        values,\r\n        selectedValue,\r\n        setSelectedValue,\r\n    }) => (\r\n        <View style={{ padding: 2.5 }}>\r\n            <View style={styles.row}>\r\n                {values.map(value => (\r\n                    <TouchableOpacity\r\n                        key={value}\r\n                        onPress={() => { setSelectedValue(value), UpdateURI(value) }}\r\n                        style={[styles.button, selectedValue === value && styles.selected]}>\r\n                        <Text\r\n                            style={[\r\n                                styles.buttonLabel,\r\n                                selectedValue === value && styles.selectedLabel,\r\n                            ]}>\r\n                            {value}\r\n                        </Text>\r\n                    </TouchableOpacity>\r\n                ))}\r\n            </View>\r\n        </View>\r\n    );\r\n\r\n    if (Platform.OS === 'ios') {\r\n        return (\r\n\r\n            <View style={{ padding: 6 }}>\r\n                <TabData\r\n                    label=\"Useful links\"\r\n                    values={['GBF Wiki', 'GameWith']}\r\n                    selectedValue={flexDirection}\r\n                    setSelectedValue={setflexDirection}\r\n\r\n                >\r\n                </TabData>\r\n                <WebView\r\n                        style={styles.item}\r\n                        originWhitelist={['*']}\r\n                        source={{ uri: website }}\r\n                    />\r\n                   \r\n            </View>\r\n\r\n        );\r\n    }\r\n\r\n    return (\r\n\r\n        <View style={{ padding: 10, flex: 1, }}>\r\n            <TabData\r\n                label=\"Useful links\"\r\n                values={['GBF Wiki', 'Gamewith']}\r\n                selectedValue={flexDirection}\r\n                setSelectedValue={setflexDirection}\r\n            >\r\n            </TabData>\r\n            \r\n        </View>\r\n\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\nfunction MyTabs() {\r\n    return (\r\n        <Header label={\"Welcome\"}></Header>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        marginTop: 8,\r\n        backgroundColor: 'aliceblue',\r\n    },\r\n    button: {\r\n        paddingHorizontal: 8,\r\n        paddingVertical: 6,\r\n        borderRadius: 4,\r\n        backgroundColor: 'azure ',\r\n        alignSelf: 'flex-start',\r\n        marginHorizontal: '1%',\r\n        marginBottom: 6,\r\n        minWidth: '50%',\r\n        textAlign: 'center',\r\n    },\r\n    selected: {\r\n        backgroundColor: 'cornflowerblue',\r\n        borderWidth: 0,\r\n    },\r\n    buttonLabel: {\r\n        fontSize: 12,\r\n        fontWeight: '500',\r\n        color: 'cornflowerblue',\r\n    },\r\n    selectedLabel: {\r\n        color: 'white',\r\n    },\r\n    label: {\r\n        textAlign: 'center',\r\n        marginBottom: 10,\r\n        fontSize: 24,\r\n    },\r\n    row: {\r\n        flexDirection: 'row',\r\n        flexWrap: 'nowrap',\r\n        minWidth: '100%'\r\n    },\r\n    item: {\r\n        backgroundColor: \"white\",\r\n        \r\n    },\r\n    creator: {\r\n        fontWeight: \"bold\",\r\n        fontSize: 16,\r\n    },\r\n    date: {\r\n        color: 'grey',\r\n        width: Dimensions.get(\"screen\").width * 0.69,\r\n    },\r\n    content: {\r\n        marginTop: 10,\r\n    },\r\n    containerA: {\r\n       minWidth: '100%'\r\n    },\r\n});\r\n\r\nexport default HomeTopNav;\r\n\r\n\r\n\r\n","import * as React from 'react';\r\nimport { View, StyleSheet, Text, Pressable } from 'react-native';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport HomeTopNav from './HomeTopNav';\r\n\r\nconst Stack = createNativeStackNavigator();\r\n\r\nfunction HomeScreen({navigation}) {\r\n  return (\r\n    <View style={{ flex: 1, alignItems: 'center', justifyContent: 'flex-start' }}>\r\n      <HomeTopNav></HomeTopNav>\r\n      <Text>Home Screen</Text>\r\n    </View>\r\n  );\r\n}\r\n\r\nfunction DetailsScreen() {\r\n  return (\r\n    <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\r\n      <Text>Details Screen</Text>\r\n    </View>\r\n  );\r\n}\r\n\r\nfunction ScreenNav() {\r\n    return (\r\n      \r\n      <Stack.Navigator initialRouteName=\"HomePage\">\r\n        <Stack.Screen name=\"Front Page\" component={HomeScreen} />\r\n        <Stack.Screen name=\"Details\" component={DetailsScreen} />\r\n      </Stack.Navigator>\r\n\r\n  \r\n    );\r\n  }\r\n  \r\n  export default ScreenNav;\r\n  \r\n  const styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n    },\r\n  });\r\n  ","import * as React from 'react';\r\nimport { View, StyleSheet, Text } from 'react-native';\r\nimport ScreenNav from '../nav/ScreenNav';\r\nimport HomeTopNav from '../nav/HomeTopNav';\r\n\r\nfunction HomePage() {\r\n  return (\r\n    <View style={styles.container}>\r\n      <HomeTopNav></HomeTopNav>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default HomePage;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    \r\n  },\r\n});\r\n","import * as React from 'react';\r\nimport { View, Text, StyleSheet, TouchableOpacity, ScrollView } from 'react-native';\r\n\r\nimport * as SQLite from 'expo-sqlite'\r\nimport { useState, useEffect } from 'react';\r\nimport { StatusBar } from 'expo-status-bar';\r\nimport DropDownPicker from 'react-native-dropdown-picker';\r\nimport TeamsDropDown from '../components/SQLHelper';\r\n\r\n\r\n\r\n\r\nfunction TeamPage() {\r\n    const [db, setDb] = useState(SQLite.openDatabase('./assets/database/localDatabase.db'));\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [names, setNames] = useState([]);\r\n\r\n    useEffect(() => {      \r\n        db.transaction(tx => {\r\n          tx.executeSql('SELECT * FROM SetupDetails', null,\r\n            (txObj, resultSet) => setNames(resultSet.rows._array),\r\n            (txObj, error) => console.log(error)\r\n          );\r\n        });\r\n    \r\n        setIsLoading(false);\r\n      }, []);\r\n\r\n    if(isLoading)\r\n    {\r\n        return (\r\n            <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n            <Text>Loading Teams</Text>\r\n          \r\n            </View>\r\n        );\r\n    }\r\n    return (\r\n      <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n        <Text>Teams</Text>\r\n    \r\n      </View>\r\n    );\r\n  }\r\nexport default TeamPage;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n});\r\n","import * as ImagePicker from 'expo-image-picker';\r\nimport * as React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport { StyleSheet, View, Text, Platform, Pressable, ScrollView } from 'react-native';\r\nimport { Image } from 'react-native-web';\r\n\r\n\r\nexport default function WebImageSelector() {\r\n    const [images, setImages] = useState('');\r\n    const [res, setRes] = useState([]);\r\n    const [loaded, setLoad] = useState(false);\r\n    const [image, setImage] = useState(null);\r\n\r\n    const toogleLoaded = () => {\r\n        setLoad((loaded) => !loaded);\r\n    };\r\n\r\n    async function LoadImages() {\r\n        await pickImageAsync();\r\n        setLoad(true);\r\n        console.log(\"\\nLoaded: \" + loaded);\r\n\r\n    }\r\n\r\n    const pickImageAsync = async () => {\r\n        let result = await ImagePicker.launchImageLibraryAsync({\r\n          quality: 1,\r\n          allowsMultipleSelection: true,\r\n          selectionLimit: 4\r\n        });\r\n    \r\n        if (!result.canceled) {\r\n          console.log(result);\r\n          setImages(result);\r\n          console.log(images);\r\n          setRes(result);\r\n          result.assets.map((source, i) => {\r\n            console.log(source.uri);\r\n          });\r\n          console.log(\"\\nLoaded: \" + loaded);\r\n          setLoad(true);\r\n          console.log(\"\\nLoaded: \" + loaded);\r\n    \r\n    \r\n    \r\n        } else {\r\n          alert('You did not select any image.');\r\n        }\r\n      };\r\n    \r\n\r\n    return (\r\n        <View>\r\n            <View style={styles.buttonContainer}>\r\n                <Text></Text>\r\n                <Pressable\r\n                    style={[styles.button, { backgroundColor: '#fff' }]}\r\n                    onPress={LoadImages}\r\n                >\r\n                    <Text style={styles.buttonLabel}>Add Images</Text>\r\n                </Pressable>\r\n                {\r\n                    loaded ?\r\n                        res.assets.map((source, i) => {\r\n                            console.log(i + \": \" + source.uri);\r\n                            return (\r\n\r\n                                <View style={styles.imageContainer}>\r\n                                    <Image\r\n                                        id={\"image_\" + i}\r\n                                        style={styles.image}\r\n                                        source={source.uri}\r\n                         \r\n                                    >\r\n                                    </Image>\r\n                                </View>\r\n\r\n                            );\r\n\r\n                        }) : <Text>No Images loaded</Text>\r\n                }\r\n\r\n            </View>\r\n        </View>\r\n\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n\r\n    },\r\n    buttonContainer: {\r\n        width: 200,\r\n        height: 50,\r\n        marginHorizontal: 20,\r\n        alignItems: 'center',\r\n        alignSelf: 'center'\r\n\r\n    },\r\n    button: {\r\n        borderRadius: 10,\r\n        width: '100%',\r\n        height: '100%',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        flexDirection: 'row',\r\n    },\r\n    imageContainer:\r\n    {\r\n        alignItems: 'center',\r\n    },\r\n    image: {\r\n        width: 1920,\r\n        height: 1080,\r\n        borderRadius: 18,\r\n        alignSelf: 'flex-start',\r\n        padding: 1,\r\n        resizeMode: 'contain'\r\n\r\n    },\r\n    button: {\r\n        borderRadius: 10,\r\n        width: '100%',\r\n        height: '100%',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        flexDirection: 'row',\r\n    },\r\n    buttonLabel: {\r\n        color: '#6e6d6d',\r\n        fontSize: 16,\r\n    },\r\n});\r\n\r\n\r\n\r\n","import * as ImagePicker from 'expo-image-picker';\r\nimport * as React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport { StyleSheet, View, Text, Platform, Pressable, ScrollView } from 'react-native';\r\nimport { Image } from 'expo-image';\r\nimport WebImageSelector from './Web/WebImageSelector';\r\n\r\n\r\nexport default function ImageSelector() {\r\n  const [images, setImages] = useState('');\r\n  const [res, setRes] = useState([]);\r\n  const [loaded, setLoad] = useState(false);\r\n\r\n\r\n  const pickImageAsync = async () => {\r\n    let result = await ImagePicker.launchImageLibraryAsync({\r\n      quality: 1,\r\n      allowsMultipleSelection: true,\r\n      selectionLimit: 4\r\n    });\r\n\r\n    if (!result.canceled) {\r\n      console.log(result);\r\n      setImages(result);\r\n      console.log(images);\r\n      setRes(result);\r\n      result.assets.map((source, i) => {\r\n        console.log(source.uri);\r\n      });\r\n      console.log(\"\\nLoaded: \" + loaded);\r\n      setLoad(true);\r\n      console.log(\"\\nLoaded: \" + loaded);\r\n\r\n\r\n\r\n    } else {\r\n      alert('You did not select any image.');\r\n    }\r\n  };\r\n\r\n  if(Platform.OS === \"ios\")\r\n  {\r\n    return (\r\n      <View>\r\n        <View style={styles.buttonContainer}>\r\n          <Text></Text>\r\n          <Pressable\r\n            style={[styles.button, { backgroundColor: '#fff' }]}\r\n            onPress={pickImageAsync}\r\n          >\r\n            <Text style={styles.buttonLabel}>Add Images</Text>\r\n          </Pressable>\r\n          {\r\n            loaded ?\r\n              res.assets.map((source, i) => {\r\n                console.log(i + \": \" + source.uri);\r\n                return (\r\n  \r\n                  <View style={styles.imageContainer}>\r\n                    <Image\r\n                      id={\"image_\" + i}\r\n                      style={styles.image}\r\n                      source={source.uri}\r\n                      contentFit='contain'                  \r\n                    >\r\n                    </Image>\r\n                  </View>\r\n  \r\n                );\r\n  \r\n              }) : <Text>No Images loaded</Text>\r\n          }\r\n        </View>\r\n      </View>\r\n  \r\n    );\r\n  }\r\n  if(Platform.OS === 'web')\r\n  {\r\n    return (\r\n      <WebImageSelector></WebImageSelector>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n\r\n  },\r\n  buttonContainer: {\r\n    width: 200,\r\n    height: 48,\r\n    marginHorizontal: 20,\r\n    alignItems: 'center',\r\n    alignSelf: 'center'\r\n\r\n  },\r\n  button: {\r\n    borderRadius: 10,\r\n    width: '100%',\r\n    height: '100%',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    flexDirection: 'row',\r\n  },\r\n  imageContainer:\r\n  {\r\n    alignItems: 'center',\r\n  },\r\n  image: {\r\n    width: 350,\r\n    height: 340,\r\n    borderRadius: 18,\r\n    alignSelf: 'flex-start',\r\n    padding: 1,\r\n    \r\n  },\r\n  button: {\r\n    borderRadius: 10,\r\n    width: '100%',\r\n    height: '100%',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    flexDirection: 'row',\r\n  },\r\n  buttonLabel: {\r\n    color: '#6e6d6d',\r\n    fontSize: 16,\r\n  },\r\n});\r\n\r\n\r\n\r\n","import { StyleSheet, View, Text, Alert } from 'react-native';\r\nimport { Picker } from '@react-native-picker/picker';\r\nimport { useState } from 'react';\r\nimport Modal from 'react-native-modal';\r\n\r\nexport default function TypeModal() {\r\n    const [isModalVisible, setModalVisible] = useState(false);\r\n    const [type, setType] = useState('');\r\n\r\n    const toggleModal = () => {\r\n        setModalVisible(!isModalVisible);\r\n    };\r\n\r\n    function StoreType(type) {\r\n        setType(type);\r\n        setModalVisible(false);\r\n    }\r\n    return (\r\n        <View style={styles.centeredView}>\r\n            <Modal\r\n                animationType={'fade'}\r\n                transparent={true}\r\n                isVisible={isModalVisible}\r\n                onBackdropPress={() => setModalVisible(false)}\r\n                onRequestClose={() => {\r\n                    Alert.alert('Modal has been closed.');\r\n                    setModalVisible(!isModalVisible);\r\n                }}>\r\n                <View style={styles.modalView}>\r\n                    <Text style={styles.modalText}>Set Battle Type</Text>\r\n\r\n                    <Picker\r\n                        style={{ height: 20, width: '100%', alignContent: 'center', }}\r\n                        selectedValue={type}\r\n                        onValueChange={(itemValue, itemIndex) =>\r\n                            StoreType(itemValue)\r\n                        }>\r\n                        <Picker.Item label=\"Full-Auto\" value=\"Full-Auto\" />\r\n                        <Picker.Item label=\"Semi-Auto\" value=\"Semi-Auto\" />\r\n                        <Picker.Item label=\"Manual\" value=\"Manual\" />\r\n                    </Picker>\r\n\r\n                </View>\r\n            </Modal>\r\n            <Text style={styles.label}\r\n                onPress={toggleModal}\r\n            >Battle Type: {type}</Text>\r\n        </View>\r\n\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    blurredView:\r\n    {\r\n        flex: 1,\r\n        justifyContent: 'flex-end',\r\n        alignItems: 'center',\r\n        backgroundColor: '#000000AA',\r\n    },\r\n    label: {\r\n        alignItems: 'center',\r\n        alignSelf: 'center',\r\n    },\r\n    centeredView: {\r\n        justifyContent: 'flex-end',\r\n        alignItems: 'center',\r\n        backgroundColor: '#f2f2f2',\r\n        height: '35%'\r\n\r\n    },\r\n    button: {\r\n        borderRadius: 10,\r\n        width: '50%',\r\n        height: '35%',\r\n        alignItems: 'center',\r\n        alignSelf: 'center',\r\n        justifyContent: 'center',\r\n        flexDirection: 'row',\r\n    },\r\n    modalView: {\r\n        height: '45%',\r\n        width: '100%',\r\n        margin: 0,\r\n        backgroundColor: 'white',\r\n        borderRadius: 20,\r\n        padding: 35,\r\n        alignItems: 'baseline',\r\n        shadowColor: '#000',\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 2,\r\n        },\r\n        shadowOpacity: 0.25,\r\n        shadowRadius: 4,\r\n        elevation: 5,\r\n    },\r\n});","import { StyleSheet, View, Text, Alert } from 'react-native';\r\nimport { Picker } from '@react-native-picker/picker';\r\nimport { useState } from 'react';\r\nimport Modal from 'react-native-modal';\r\n\r\nexport default function ElementModal() {\r\n    const [isModalVisible, setModalVisible] = useState(false);\r\n    const [element, setElement] = useState('');\r\n    const [type, setType] = useState('');\r\n    \r\n    const toggleModal = () => {\r\n        setModalVisible(!isModalVisible);\r\n    };\r\n\r\n    function StoreElement(type) {\r\n        setElement(type);\r\n        setModalVisible(false);\r\n    }\r\n\r\n    return (\r\n        <View style={styles.centeredView}>\r\n            <Modal\r\n                animationType={'fade'}\r\n                transparent={true}\r\n                isVisible={isModalVisible}\r\n                onBackdropPress={() => setModalVisible(false)}\r\n                onRequestClose={() => {\r\n                    Alert.alert('Modal has been closed.');\r\n                    setModalVisible(!isModalVisible);\r\n                }}>\r\n          \r\n                    <View style={styles.modalView}>\r\n                        <Text style={styles.modalText}>Set Battle Type</Text>\r\n\r\n                        <Picker\r\n                            style={{ height: 20, width: '100%', alignContent: 'center', }}\r\n                            selectedValue={type}\r\n                            onValueChange={(itemValue, itemIndex) =>\r\n                                StoreElement(itemValue)\r\n                            }>\r\n                            <Picker.Item label=\"Fire\" value=\"Fire\" />\r\n                            <Picker.Item label=\"Wind\" value=\"Wind\" />\r\n                            <Picker.Item label=\"Water\" value=\"Water\" />\r\n                            <Picker.Item label=\"Earth\" value=\"Earth\" />\r\n                            <Picker.Item label=\"Dark\" value=\"Dark\" />\r\n                            <Picker.Item label=\"Light\" value=\"Light\" />\r\n                        </Picker>\r\n\r\n                    </View>\r\n                \r\n            </Modal>\r\n            <Text style={styles.label}\r\n                onPress={toggleModal}\r\n            >Element: {element}</Text>\r\n        </View>\r\n    );\r\n\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    blurredView:\r\n    {\r\n        flex: 1,\r\n        justifyContent: 'flex-end',\r\n        alignItems: 'center',\r\n        backgroundColor: '#000000AA',\r\n    },\r\n    label: {\r\n        alignItems: 'center',\r\n        alignSelf: 'center',\r\n    },\r\n    centeredView: {\r\n        justifyContent: 'flex-end',\r\n        alignItems: 'center',\r\n        backgroundColor: '#f2f2f2',\r\n        height: '35%'\r\n\r\n    },\r\n    button: {\r\n        borderRadius: 10,\r\n        width: '50%',\r\n        height: '35%',\r\n        alignItems: 'center',\r\n        alignSelf: 'center',\r\n        justifyContent: 'center',\r\n        flexDirection: 'row',\r\n    },\r\n    modalView: {\r\n        height: '45%',\r\n        width: '100%',\r\n        margin: 0,\r\n        backgroundColor: 'white',\r\n        borderRadius: 20,\r\n        padding: 35,\r\n        alignItems: 'baseline',\r\n        shadowColor: '#000',\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 2,\r\n        },\r\n        shadowOpacity: 0.25,\r\n        shadowRadius: 4,\r\n        elevation: 5,\r\n    },\r\n});","import { StyleSheet, View, Text, Platform, Pressable, Alert, StatusBar, Modal } from 'react-native';\r\nimport { Picker } from '@react-native-picker/picker';\r\nimport { useState, useEffect } from 'react';\r\nimport { BlurView } from 'expo-blur';\r\n\r\nimport TypeModal from './Modals/TypeModal';\r\nimport ElementModal from './Modals/ElementModal';\r\n\r\nexport default function Selection() {\r\n    const [isModalVisible, setModalVisible] = useState(false);\r\n    const [type, setType] = useState('');\r\n    const [isBlurVisisble, setBlur] = useState(true);\r\n    const [element, setElement] = useState('');\r\n\r\n    const toggleModal = () => {\r\n        setModalVisible(!isModalVisible);\r\n        setBlur(!isBlurVisisble);\r\n    };\r\n\r\n    function StoreType(type) {\r\n        setType(type);\r\n        setModalVisible(false);\r\n        setBlur(false);\r\n    }\r\n\r\n    function StoreElement(type) {\r\n        setElement(type);\r\n        setModalVisible(false);\r\n        setBlur(false);\r\n    }\r\n\r\n    return (\r\n        <View style={styles.centeredView}>\r\n            <TypeModal></TypeModal>\r\n            <ElementModal></ElementModal>\r\n        </View>\r\n\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    blurredView:\r\n    {\r\n        flex: 1,\r\n        justifyContent: 'flex-end',\r\n        alignItems: 'center',\r\n        backgroundColor: '#000000AA',\r\n    },\r\n    label: {\r\n        alignItems: 'center',\r\n        alignSelf: 'center',\r\n    },\r\n    centeredView: {\r\n        justifyContent: 'flex-end',\r\n        alignItems: 'center',\r\n        backgroundColor: '#f2f2f2',\r\n        height: '35%'\r\n\r\n    },\r\n    button: {\r\n        borderRadius: 10,\r\n        width: '50%',\r\n        height: '35%',\r\n        alignItems: 'center',\r\n        alignSelf: 'center',\r\n        justifyContent: 'center',\r\n        flexDirection: 'row',\r\n    },\r\n    modalView: {\r\n        height: '45%',\r\n        width: '100%',\r\n        margin: 0,\r\n        backgroundColor: 'white',\r\n        borderRadius: 20,\r\n        padding: 35,\r\n        alignItems: 'baseline',\r\n        shadowColor: '#000',\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 2,\r\n        },\r\n        shadowOpacity: 0.25,\r\n        shadowRadius: 4,\r\n        elevation: 5,\r\n    },\r\n});","import React from 'react';\r\nimport { View, Text, StyleSheet } from 'react-native';\r\nimport {\r\n    useFonts,\r\n    ShipporiMinchoB1_400Regular,\r\n    ShipporiMinchoB1_500Medium,\r\n    ShipporiMinchoB1_600SemiBold,\r\n    ShipporiMinchoB1_800ExtraBold,\r\n  } from '@expo-google-fonts/shippori-mincho-b1';\r\n  \r\n\r\nexport default function Header1({ text }) {\r\n    let [fontsLoaded] = useFonts({\r\n        ShipporiMinchoB1_400Regular,\r\n        ShipporiMinchoB1_500Medium,\r\n        ShipporiMinchoB1_600SemiBold,\r\n        ShipporiMinchoB1_800ExtraBold,\r\n    });\r\n\r\n    if (!fontsLoaded) {\r\n        console.log(\"Can't load some fonts\");\r\n    }\r\n    return (\r\n\r\n        <Text style={{ fontFamily: 'ShipporiMinchoB1_800ExtraBold', fontSize: 20 }}>{text}</Text>\r\n        );\r\n}","import { StyleSheet, View, Text, Platform, Pressable, ScrollView, StatusBar, SafeAreaView, TextInput } from \"react-native-web\";\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { Dimensions } from \"react-native\";\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport Header1 from \"../Fonts/Header1\";\r\nimport Selection from \"../Selection\";\r\nimport * as Clipboard from 'expo-clipboard';\r\nimport ImageSelector from \"../ImageSelector\";\r\nimport domtoimage from 'dom-to-image';\r\n\r\nexport default function WebTeamCreator() {\r\n    const imageRef = useRef();\r\n    const onSaveImageAsync = async () => {\r\n        try {         \r\n            const dataUrl = await domtoimage.toJpeg(imageRef.current, {\r\n                quality: 0.95,\r\n              });\r\n        \r\n              let link = document.createElement('a');\r\n              link.download = 'setup-image.jpeg';\r\n              link.href = dataUrl;\r\n              link.click();\r\n            } catch (e) {\r\n              console.log(e);\r\n            }\r\n    }\r\n    return (\r\n        <View style={styles.container} ref={imageRef}>\r\n            <View  style={styles.buttonContainer}>\r\n                <View style={styles.top} >\r\n                    <Header1 text=\"Battle Date\"></Header1>\r\n                    <Selection></Selection>\r\n                    <TextInput\r\n                        style={styles.input}\r\n                        maxLength={8}\r\n                    >\r\n                    </TextInput>\r\n                </View>\r\n                <View style={styles.mid}>\r\n                    <ScrollView >\r\n                        <ImageSelector></ImageSelector>\r\n                    </ScrollView>\r\n                </View>\r\n\r\n            </View>\r\n            <Ionicons\r\n                name={'share-outline'}\r\n                onPress={onSaveImageAsync}\r\n                size={64}\r\n                style={{ position: 'absolute', bottom: 5, right: 0 }}\r\n            >                \r\n            </Ionicons>\r\n        </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    top:\r\n    {\r\n        backgroundColor: '#f2f2f2',\r\n        flex: 1,\r\n        width: '100%'\r\n\r\n    },\r\n    mid:\r\n    {\r\n        backgroundColor: '#f2f2f2',\r\n        flex: 6,\r\n        width: '100%',\r\n        height: '100%'\r\n    },\r\n    bottom:\r\n    {\r\n        width: '5%',\r\n        height: '5%',\r\n        backgroundColor: 'orange',\r\n        alignSelf: 'baseline'\r\n    },\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: '#25292e',\r\n        alignItems: 'center',\r\n        height: 4000,\r\n    },\r\n    scroller: {\r\n        flex: 1,\r\n\r\n    },\r\n    contentContainer: {\r\n        paddingVertical: 20\r\n    },\r\n    buttonContainer: {\r\n        flex: 1,\r\n        height: '100%',\r\n        width: '100%',\r\n        marginHorizontal: 20,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        padding: 3,\r\n    },\r\n    button: {\r\n        borderRadius: 10,\r\n        width: '100%',\r\n        height: '100%',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        flexDirection: 'row',\r\n    },\r\n    buttonLabel: {\r\n        color: '#fff',\r\n        fontSize: 16,\r\n    },\r\n    buttonIcon: {\r\n        paddingRight: 8,\r\n    },\r\n    input: {\r\n        width: '50%',\r\n        height: 25,\r\n        margin: 12,\r\n        borderWidth: 1,\r\n        padding: 2,\r\n        alignSelf: 'center',\r\n    },\r\n\r\n});\r\n","import {\r\n  StyleSheet, View, Text, Platform, Pressable,\r\n  ScrollView, StatusBar, SafeAreaView, TextInput\r\n  , Dimensions\r\n} from 'react-native';\r\nimport FontAwesome from '@expo/vector-icons/FontAwesome';\r\nimport { Picker } from '@react-native-picker/picker';\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport DateTimePicker from '@react-native-community/datetimepicker';\r\nimport ImageSelector from './ImageSelector';\r\nimport Selection from './Selection';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport * as Sharing from 'expo-sharing';\r\nimport { captureRef } from 'react-native-view-shot';\r\nimport Header1 from './Fonts/Header1';\r\nimport WebTeamCreator from './Web/WebTeamCreator';\r\nimport * as MediaLibrary from 'expo-media-library';\r\n\r\n\r\n\r\nexport default function TeamsDropDown() {\r\n  const [status, requestPermission] = MediaLibrary.usePermissions();\r\n  const imageRef = useRef();\r\n\r\n  const [type, setType] = useState('');\r\n  const [minDate, setMinDate] = useState(new Date(1598051730000));\r\n  const [date, setDate] = useState(new Date(1598051730000));\r\n  const [snapshotImg, setSnapshotImg] = useState();\r\n  const [time, setTime] = useState('');\r\n\r\n  if (status === null) {\r\n    requestPermission();\r\n  }\r\n  \r\n  const onChange = (event, selectedDate) => {\r\n    const currentDate = selectedDate;\r\n    setDate(currentDate);\r\n  };\r\n\r\n  function AdjustText() {\r\n    console.log(\"New time: \" + time);\r\n  }\r\n\r\n  const onShareImageAsync = async () => {\r\n    try {\r\n      const localUri = await captureRef(imageRef, {\r\n        quality: 1,\r\n      });\r\n\r\n      console.log(localUri);\r\n      const fileName = localUri.split('/').pop();\r\n      console.log(encodeURI(fileName));\r\n      await Sharing.shareAsync(\"file://\" + localUri);\r\n      if (localUri) {\r\n        alert(\"Saved!\");\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    let today = new Date();\r\n    let date = today.getDate() + (today.getMonth() + 1) + today.getFullYear();\r\n    setDate(today);\r\n    setMinDate(today);\r\n  }, []);\r\n\r\n  if (Platform.OS === \"ios\") {\r\n    return (\r\n      <SafeAreaView>\r\n        <ScrollView >\r\n          <View ref={imageRef}>\r\n            <View style={styles.top} >\r\n              <View style={styles.buttonContainer}>\r\n                <TextInput\r\n                  style={styles.input}\r\n                  maxLength={16}\r\n                  textAlign='center'\r\n                  placeholder='Enter a title'\r\n                ></TextInput>\r\n                <DateTimePicker\r\n                  value={date}\r\n                  minimumDate={minDate}\r\n                  onChange={onChange}\r\n                />\r\n              </View>\r\n              <Selection></Selection>\r\n              <TextInput\r\n                style={styles.input}\r\n                maxLength={8}\r\n                //inputMode='numeric'\r\n                value={time}\r\n                onChangeText={setTime}\r\n                textAlign='center'\r\n                placeholder='Enter time hhmmss' \r\n                onChange={AdjustText}\r\n              ></TextInput>\r\n            </View>\r\n            <View style={styles.mid}>\r\n              <ImageSelector></ImageSelector>\r\n            </View>\r\n          </View>\r\n        </ScrollView>\r\n        <Ionicons\r\n          name={'share-outline'}\r\n          onPress={onShareImageAsync}\r\n          size={32}\r\n          style={{ position: 'absolute', bottom: 5, right: 0 }}\r\n        ></Ionicons>\r\n      </SafeAreaView>\r\n\r\n\r\n    );\r\n  }\r\n  else {\r\n    return (\r\n      <WebTeamCreator></WebTeamCreator>\r\n    );\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  top:\r\n  {\r\n    backgroundColor: '#f2f2f2',\r\n    height: 170,\r\n    width: '100%',\r\n  },\r\n  mid:\r\n  {\r\n    backgroundColor: '#f2f2f2',\r\n    height: 1500,\r\n    width: '100%'\r\n  },\r\n  imageSec:\r\n  {\r\n    \r\n  },\r\n  bottom:\r\n  {\r\n    width: '100%',\r\n    height: 65,\r\n    backgroundColor: 'orange',\r\n    alignSelf: 'baseline'\r\n  },\r\n  container: {\r\n    flex: 1,\r\n    paddingTop: StatusBar.currentHeight,\r\n  },\r\n  scroller: {\r\n    flex: 1,\r\n\r\n  },\r\n  contentContainer: {\r\n    paddingVertical: 20\r\n  },\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#25292e',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  buttonContainer: {\r\n    width: 320,\r\n    height: 68,\r\n    marginHorizontal: 20,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    padding: 3,\r\n  },\r\n  button: {\r\n    borderRadius: 10,\r\n    width: '100%',\r\n    height: '100%',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    flexDirection: 'row',\r\n  },\r\n  buttonLabel: {\r\n    color: '#fff',\r\n    fontSize: 16,\r\n  },\r\n  buttonIcon: {\r\n    paddingRight: 8,\r\n  },\r\n  input: {\r\n    width: '50%',\r\n    height: 25,\r\n    margin: 12,\r\n    borderWidth: 1,\r\n    padding: 2,\r\n    alignSelf: 'center',\r\n  },\r\n\r\n});\r\n","import * as React from 'react';\r\nimport { Text, View } from 'react-native';\r\nimport { Ionicons } from '@expo/vector-icons';  \r\n\r\nfunction SettingsPage()\r\n{\r\n    return (\r\n        <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n          <Text>Settings Page</Text>\r\n        </View>\r\n      );\r\n}\r\n\r\nexport default SettingsPage;","import * as React from 'react';\r\nimport { View, Text, Button } from 'react-native';\r\nimport { NavigationContainer, DrawerActions } from '@react-navigation/native';\r\nimport {\r\n  createDrawerNavigator,\r\n  DrawerContentScrollView,\r\n  DrawerItemList,\r\n  DrawerItem,\r\n} from '@react-navigation/drawer';\r\nimport SettingsPage from '../pages/SettingsPage';\r\nimport TeamPage from '../pages/TeamPage';\r\nimport HomePage from '../pages/HomePage';\r\n\r\nfunction TestScreen()\r\n{\r\n  return(\r\n    <View>\r\n      <Text>Test</Text>\r\n    </View>\r\n  );\r\n}\r\n\r\n\r\nfunction DrawerContents(props)\r\n{\r\n    return (\r\n        <DrawerContentScrollView {...props}>\r\n          <DrawerItemList {...props} />\r\n          <DrawerItem\r\n            label=\"Close drawer\"\r\n            onPress={() => props.navigation.dispatch(DrawerActions.closeDrawer())}\r\n          />\r\n          <DrawerItem\r\n            label=\"Toggle drawer\"\r\n            onPress={() => props.navigation.dispatch(DrawerActions.toggleDrawer())}\r\n          />\r\n        </DrawerContentScrollView>\r\n      );\r\n}\r\n\r\nconst Drawer = createDrawerNavigator();\r\n\r\nfunction DrawerNav(){\r\n    return (\r\n        <Drawer.Navigator\r\n          useLegacyImplementation\r\n          drawerContent={(props) => <DrawerContents {...props} />}\r\n        >\r\n          <Drawer.Screen name=\"A\" component={HomePage} />\r\n        </Drawer.Navigator>\r\n      );\r\n}\r\n\r\nexport default DrawerNav;","import { StyleSheet, View, Pressable, Text } from 'react-native';\r\n\r\nexport default function Button({ label , onPress}) {\r\n\r\n  return (\r\n    <View style={styles.buttonContainer}>\r\n    <Pressable style={styles.button} onPress={onPress}>\r\n      <Text style={styles.buttonLabel}>{label}</Text>\r\n    </Pressable>\r\n  </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  buttonContainer: {\r\n    width: 320,\r\n    height: 68,\r\n    marginHorizontal: 20,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    padding: 3,\r\n    color: 'black'\r\n  },\r\n  button: {\r\n    borderRadius: 10,\r\n    width: '100%',\r\n    height: '100%',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    flexDirection: 'row',\r\n    backgroundColor: 'grey'\r\n  },\r\n  buttonIcon: {\r\n    paddingRight: 8,\r\n  },\r\n  buttonLabel: {\r\n    color: '#6e6d6d',\r\n    fontSize: 16,\r\n  },\r\n});\r\n","import { StyleSheet, View, Text, Alert, Dimensions} from 'react-native';\r\nimport Modal from 'react-native-modal';\r\nimport { useState } from 'react';\r\nimport Button from '../Button';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { StatusBar } from 'expo-status-bar';\r\n\r\n\r\nconst SideModal = ({navigation}) => {\r\n    const [isModalVisible, setModalVisible] = useState(false);\r\n    const [isIconVisible, setIconVisible] = useState(true);\r\n\r\n    const toggleModal = () => {\r\n        setModalVisible(!isModalVisible);\r\n        setIconVisible(!isIconVisible);\r\n    };\r\n\r\n    return (\r\n        <View>\r\n            <Modal\r\n                isVisible={isModalVisible}\r\n                transparent={true}            \r\n                onBackdropPress={()=> setModalVisible(false)}\r\n                onSwipeComplete={()=> setModalVisible(false)}\r\n                swipeDirection=\"right\"\r\n                animationIn={'slideInRight'}\r\n                animationOut={'slideOutRight'}\r\n                animationInTiming={1000}\r\n                animationOutTiming={1000}\r\n                backdropTransitionInTiming={800}\r\n                backdropTransitionOutTiming={800}\r\n            >           \r\n            <View style={styles.centeredView}>\r\n             \r\n                    <Text>I am the modal content!</Text>\r\n                    <Button label={\"Home\"}></Button>\r\n                </View>\r\n\r\n            </Modal>\r\n            <Ionicons\r\n                name={'reorder-four-outline'}\r\n                onPress={toggleModal}\r\n                size={32}\r\n                alignSelf='center'\r\n                visible={isIconVisible}\r\n            >                \r\n            </Ionicons>\r\n            <StatusBar/>\r\n\r\n\r\n        </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    body:\r\n    {   \r\n      \r\n      \r\n    },\r\n    centeredView: {\r\n          \r\n        height: Dimensions.get(\"screen\").height,\r\n        width: Dimensions.get(\"window\").width,\r\n        backgroundColor: '#e5e5e6',\r\n        paddingTop: Dimensions.get(\"screen\").height * 0.105,\r\n        marginLeft: Dimensions.get(\"window\").width * 0.18,\r\n        paddingLeft: Dimensions.get(\"screen\").width * 0.010,\r\n        \r\n      },\r\n    \r\n})\r\n\r\nexport default SideModal;","import React from 'react';\r\nimport { Pressable, StyleSheet, Text, View, Dimensions, ScrollView } from 'react-native';\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\nimport { TextInput } from 'react-native';\r\nimport Button from '../Button.js';\r\nimport Modal from 'react-native-modal';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { useState } from 'react';\r\n\r\nexport default function SignUpModal(){\r\n    const [isModalVisible, setModalVisible] = useState(false);\r\n    const [createVisible, setCreate] = useState(false);\r\n  const [value, setValue] = React.useState({\r\n    email: '',\r\n    password: '',\r\n    error: ''\r\n  })\r\n\r\n  function signUp() {\r\n    if (value.email === '' || value.password === '') {\r\n      setValue({\r\n        ...value,\r\n        error: 'Email and password are mandatory.'\r\n      })\r\n      return;\r\n    }\r\n\r\n    setValue({\r\n      ...value,\r\n      error: ''\r\n    })\r\n  }\r\n\r\n  if (Platform.OS === 'ios') {\r\n\r\n    return (\r\n      <View style={styles.container}>\r\n        <Text>Create an Account</Text>\r\n        <ScrollView keyboardShouldPersistTaps='handled'\r\n          scrollEnabled='false'\r\n        >\r\n          <Modal\r\n            isVisible={createVisible}\r\n          >\r\n            <SignUpModal></SignUpModal>\r\n          </Modal>\r\n\r\n          <Modal\r\n            isVisible={isModalVisible}\r\n            transparent={true}\r\n            onBackdropPress={() => setModalVisible(false)}\r\n            animationIn={'shake'}\r\n            animationOut={'fadeOut'}\r\n            animationInTiming={1000}\r\n            animationOutTiming={1000}\r\n            backdropTransitionInTiming={800}\r\n            backdropTransitionOutTiming={800}\r\n          >\r\n            {!!value.error && <View style={styles.error}>\r\n              <Text>{value.error}</Text></View>}\r\n          </Modal>\r\n          <View style={styles.controls}>\r\n            <View style={styles.inputBox}>\r\n            <TextInput\r\n                style={styles.input}\r\n                placeholder='Email'\r\n                containerStyle={styles.control}\r\n                value={value.email}\r\n                onChangeText={(text) => setValue({ ...value, email: text })}\r\n                leftIcon={<Icon\r\n                  name='envelope'\r\n                  size={16}\r\n                />}\r\n              />\r\n            </View>\r\n            <Button label=\"Sign up\" />\r\n          </View>\r\n\r\n        </ScrollView>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      paddingTop: 20,\r\n      backgroundColor: '#fff',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n  \r\n    controls: {\r\n      flex: 1,\r\n      alignItems: 'center',\r\n    },\r\n  \r\n    control: {\r\n      marginTop: 10\r\n    },\r\n  \r\n    error: {\r\n      marginTop: 10,\r\n      padding: 10,\r\n      color: '#fff',\r\n      backgroundColor: 'white',\r\n      textAlign: 'center',\r\n      borderBottomLeftRadius: 15,\r\n      borderBottomRightRadius: 15,\r\n      borderTopRightRadius: 15,\r\n      borderTopLeftRadius: 15,\r\n    },\r\n    inputBox:\r\n    {\r\n      flexDirection: 'row',\r\n      marginBottom: 10,\r\n  \r\n    },\r\n    webInput: {\r\n      textAlign: 'center',\r\n      width: Dimensions.get('screen').width * 0.4,\r\n      height: 32,\r\n      margin: 12,\r\n      borderWidth: 1,\r\n      padding: 2,\r\n      alignSelf: 'center',\r\n    },\r\n    input: {\r\n      textAlign: 'center',\r\n      width: Dimensions.get('screen').width * 0.7,\r\n      height: 32,\r\n      margin: 12,\r\n      borderWidth: 1,\r\n      padding: 2,\r\n      alignSelf: 'center',\r\n    },\r\n  \r\n  });\r\n  \r\n\r\n","import React from 'react';\r\nimport { Dimensions, Platform, Pressable, StyleSheet, Text, View } from 'react-native';\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\nimport { getAuth, signInWithEmailAndPassword } from 'firebase/auth';\r\nimport { TextInput } from 'react-native';\r\nimport { useState } from 'react';\r\nimport Button from '../components/Button';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport Modal from 'react-native-modal';\r\nimport { ScrollView } from 'react-native';\r\nimport SignUpModal from '../components/Modals/SignUpModal';\r\n\r\n\r\nconst SignInScreen = () => {\r\n  const [isModalVisible, setModalVisible] = useState(false);\r\n  const [createVisible, setCreate] = useState(false);\r\n\r\n  const toggleModal = () => {\r\n    setModalVisible(!isModalVisible);\r\n  };\r\n\r\n\r\n  const toggleSignUp = () =>\r\n  {\r\n    setCreate(true);\r\n  }\r\n\r\n  const auth = getAuth();\r\n  const [value, setValue] = useState({\r\n    email: '',\r\n    password: '',\r\n    error: ''\r\n  })\r\n\r\n  async function signIn() {\r\n    if (value.email === '' || value.password === '') {\r\n      setValue({\r\n        ...value,\r\n        error: 'Email and password are mandatory.'\r\n      })\r\n      return;\r\n    }\r\n    try {\r\n      await signInWithEmailAndPassword(auth, value.email, value.password);\r\n    } catch (error) {\r\n      setValue({\r\n        ...value,\r\n        error: error.message,\r\n      })\r\n      toggleModal();\r\n    }\r\n  }\r\n  if (Platform.OS === 'web') {\r\n    return (\r\n\r\n      <View style={styles.container}>\r\n        <Text>SignInPage</Text>\r\n        <Modal\r\n          isVisible={isModalVisible}\r\n          transparent={true}\r\n          onBackdropPress={() => setModalVisible(false)}\r\n          animationIn={'shake'}\r\n          animationOut={'fadeOut'}\r\n          animationInTiming={1000}\r\n          animationOutTiming={1000}\r\n          backdropTransitionInTiming={800}\r\n          backdropTransitionOutTiming={800}\r\n        >\r\n          {!!value.error && <View style={styles.error}>\r\n            <Text>{value.error}</Text></View>}\r\n        </Modal>\r\n        <View style={styles.controls}>\r\n          <View style={styles.inputBox}>\r\n            <Ionicons name=\"mail-outline\"\r\n              size={32}\r\n            >\r\n            </Ionicons>\r\n            <TextInput\r\n              style={styles.webInput}\r\n              placeholder='Email'\r\n              containerStyle={styles.control}\r\n              value={value.email}\r\n              onChangeText={(text) => setValue({ ...value, email: text })}\r\n              leftIcon={<Icon\r\n                name='envelope'\r\n                size={16}\r\n              />}\r\n            />\r\n          </View>\r\n\r\n          <View style={{ flexDirection: 'row' }}>\r\n            <Ionicons name=\"lock-closed-outline\"\r\n              size={32}\r\n            >\r\n            </Ionicons>\r\n            <TextInput\r\n              style={styles.webInput}\r\n              placeholder='Password'\r\n              containerStyle={styles.control}\r\n              value={value.password}\r\n              onChangeText={(text) => setValue({ ...value, password: text })}\r\n              secureTextEntry={true}\r\n              leftIcon={<Icon\r\n                name='key'\r\n                size={16}\r\n              />}\r\n            />\r\n          </View>\r\n          <Button label=\"Sign in\" onPress={signIn} />\r\n        </View>\r\n\r\n      </View>\r\n    );\r\n  }\r\n  if (Platform.OS === 'ios') {\r\n\r\n    return (\r\n      <View style={styles.container}>\r\n        <Text>Log into your Account</Text>\r\n        <ScrollView keyboardShouldPersistTaps='handled'\r\n          scrollEnabled='false'\r\n        >\r\n          <Modal\r\n            onBackdropPress={() => setCreate(false)}\r\n            isVisible={createVisible}\r\n            style={{margin: 0, paddingTop: 100, alignContent: 'center'}}\r\n            swipeDirection=\"down\"\r\n          >\r\n            <SignUpModal></SignUpModal>\r\n          </Modal>\r\n\r\n          <Modal\r\n            isVisible={isModalVisible}\r\n            transparent={true}\r\n            onBackdropPress={() => setModalVisible(false)}\r\n            animationIn={'shake'}\r\n            animationOut={'fadeOut'}\r\n            animationInTiming={1000}\r\n            animationOutTiming={1000}\r\n            backdropTransitionInTiming={800}\r\n            backdropTransitionOutTiming={800}\r\n          >\r\n            {!!value.error && <View style={styles.error}>\r\n              <Text>{value.error}</Text></View>}\r\n          </Modal>\r\n          <View style={styles.controls}>\r\n            <View style={styles.inputBox}>\r\n              <Ionicons name=\"mail-outline\"\r\n                size={32}\r\n              >\r\n              </Ionicons>\r\n              <TextInput\r\n                style={styles.input}\r\n                placeholder='Email'\r\n                containerStyle={styles.control}\r\n                value={value.email}\r\n                onChangeText={(text) => setValue({ ...value, email: text })}\r\n                leftIcon={<Icon\r\n                  name='envelope'\r\n                  size={16}\r\n                />}\r\n              />\r\n            </View>\r\n\r\n            <View style={{ flexDirection: 'row' }}>\r\n              <Ionicons name=\"lock-closed-outline\"\r\n                size={32}\r\n              >\r\n              </Ionicons>\r\n              <TextInput\r\n                style={styles.input}\r\n                placeholder='Password'\r\n                containerStyle={styles.control}\r\n                value={value.password}\r\n                onChangeText={(text) => setValue({ ...value, password: text })}\r\n                secureTextEntry={true}\r\n                leftIcon={<Icon\r\n                  name='key'\r\n                  size={16}\r\n                />}\r\n              />\r\n            </View>\r\n            <Button label=\"Sign in\" onPress={signIn} />\r\n            <Button label=\"Sign Up\" onPress={toggleSignUp} />\r\n          </View>\r\n\r\n        </ScrollView>\r\n      </View>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    paddingTop: 20,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n\r\n  controls: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n  },\r\n\r\n  control: {\r\n    marginTop: 10\r\n  },\r\n\r\n  error: {\r\n    marginTop: 10,\r\n    padding: 10,\r\n    color: '#fff',\r\n    backgroundColor: 'white',\r\n    textAlign: 'center',\r\n    borderBottomLeftRadius: 15,\r\n    borderBottomRightRadius: 15,\r\n    borderTopRightRadius: 15,\r\n    borderTopLeftRadius: 15,\r\n  },\r\n  inputBox:\r\n  {\r\n    flexDirection: 'row',\r\n    marginBottom: 10,\r\n\r\n  },\r\n  webInput: {\r\n    textAlign: 'center',\r\n    width: Dimensions.get('screen').width * 0.4,\r\n    height: 32,\r\n    margin: 12,\r\n    borderWidth: 1,\r\n    padding: 2,\r\n    alignSelf: 'center',\r\n  },\r\n  input: {\r\n    textAlign: 'center',\r\n    width: Dimensions.get('screen').width * 0.7,\r\n    height: 32,\r\n    margin: 12,\r\n    borderWidth: 1,\r\n    padding: 2,\r\n    alignSelf: 'center',\r\n  },\r\n\r\n});\r\n\r\nexport default SignInScreen;","import React, { useEffect } from 'react';\r\nimport { getAuth, onAuthStateChanged } from 'firebase/auth';\r\n\r\nconst auth = getAuth();\r\n\r\nexport function useAuthentication() {\r\n    const [user, setUser] = React.useState('');\r\n\r\n    useEffect(() => {\r\n      const unsubscribeFromAuthStatuChanged = onAuthStateChanged(auth, (user) => {\r\n        if (user) {\r\n          // User is signed in, see docs for a list of available properties\r\n          // https://firebase.google.com/docs/reference/js/firebase.User\r\n          setUser(user);\r\n        } else {\r\n          // User is signed out\r\n          setUser(undefined);\r\n        }\r\n      });\r\n  \r\n      return unsubscribeFromAuthStatuChanged;\r\n    }, []);\r\n  \r\n    return {\r\n      user\r\n    };\r\n}\r\n\r\n","import React from 'react';\r\nimport { Dimensions, Platform, Pressable, StyleSheet, Text, View } from 'react-native';\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\nimport { getAuth, signInWithEmailAndPassword, signOut } from 'firebase/auth';\r\nimport { TextInput } from 'react-native';\r\nimport { useState } from 'react';\r\nimport Button from '../components/Button';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport Modal from 'react-native-modal';\r\nimport { ScrollView } from 'react-native';\r\nimport { useAuthentication } from '../firebase/AuthenticationHook';\r\n\r\nexport default function AccountHome(){\r\n    const { user } = useAuthentication();\r\n    const auth = getAuth();\r\n    console.log(user);\r\n    return(\r\n        <View>\r\n            <Text>Welcome {user?.email}</Text>\r\n            <Button label=\"Sign Out\"  onPress={() => signOut(auth)} />\r\n        </View>\r\n    );\r\n}","import * as React from 'react';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport SignInScreen from '../pages/SignInPage';\r\nimport AccountHome from '../pages/AccountHomePage';\r\n\r\nconst accountStack = createNativeStackNavigator();\r\n\r\n\r\nexport default function AccountStackScreen()\r\n{\r\n    return (\r\n        <accountStack.Navigator>\r\n            <accountStack.Screen name=\"Sign In\" component={SignInScreen}/>\r\n            <accountStack.Screen name=\"AccHome\" component={AccountHome}/>\r\n        </accountStack.Navigator>\r\n    );\r\n}\r\n\r\n","import * as React from 'react';\r\nimport { View, Text, StyleSheet, TouchableOpacity, ScrollView } from 'react-native';\r\n\r\nexport default function TeamHomeScreen(){\r\n    return(\r\n        <View style={styles.main}>\r\n            <Text>Teams Home</Text>\r\n        </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create(\r\n   {\r\n    main:{\r\n        flex: 1, \r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    }\r\n    }\r\n)","import * as React from 'react';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport TeamsDropDown from '../components/TeamsDropDown';\r\nimport TeamHomeScreen from '../pages/TeamsHome';\r\nimport { View, Text } from 'react-native';\r\nimport Button from '../components/Button';\r\n\r\nconst TeamStack = createNativeStackNavigator();\r\n\r\nfunction HomeTeam({ navigation }) {\r\n    return (\r\n        <View>\r\n            <TeamHomeScreen></TeamHomeScreen>\r\n            <View style={{ alignItems: 'center' }}>\r\n                <Button\r\n                    label=\"New\"\r\n                    onPress={() => navigation.navigate('Sharer')}\r\n                />\r\n            </View>\r\n\r\n        </View>\r\n    );\r\n}\r\n\r\nexport default function TeamStackScreen() {\r\n\r\n    return (\r\n        <TeamStack.Navigator>\r\n            <TeamStack.Screen name={\"Teams \"} component={HomeTeam} />\r\n            <TeamStack.Screen name={\"Sharer\"} component={TeamsDropDown} />\r\n        </TeamStack.Navigator>\r\n    );\r\n}\r\n\r\n","import * as React from 'react';\r\nimport '../firebase/firebase';\r\nimport { Text, View } from 'react-native';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport { StatusBar } from 'expo-status-bar';\r\nimport HomePage from '../pages/HomePage';\r\nimport TeamPage from '../pages/TeamPage';\r\nimport TeamsDropDown from '../components/TeamsDropDown';\r\nimport SettingsPage from '../pages/SettingsPage';\r\nimport DrawerNav from '../components/DrawerNav';\r\nimport { createDrawerNavigator } from '@react-navigation/drawer';\r\nimport SideModal from '../components/Modals/SideModal';\r\nimport SignInScreen from '../pages/SignInPage';\r\nimport LoginIndex from '../pages/LoginIndex';\r\nimport AccountPage from '../pages/AccountPage';\r\nimport AccountStackScreen from '../stacks/AccountStack';\r\nimport TeamStackScreen from '../stacks/TeamStack';\r\n\r\n\r\nconst Tab = createBottomTabNavigator();\r\nconst Drawer = createDrawerNavigator();\r\n\r\nfunction AppNavigator() {\r\n  return (\r\n    <Tab.Navigator\r\n      screenOptions={({ route }) => ({\r\n        tabBarIcon: ({ focused, color, size }) => {\r\n          if (route.name === 'Home') {\r\n            return (\r\n              <Ionicons\r\n                name={\r\n                  focused\r\n                    ? 'ios-information-circle'\r\n                    : 'ios-information-circle-outline'\r\n                }\r\n                size={size}\r\n                color={color}\r\n              />\r\n            );\r\n          }\r\n          if (route.name === 'Teams') {\r\n            return (\r\n              <Ionicons\r\n                name={\r\n                  focused\r\n                    ? 'add-outline'\r\n                    : 'add-sharp'\r\n                }\r\n                size={size}\r\n                color={color}\r\n              />\r\n            );\r\n          }\r\n          if (route.name === 'Account') {\r\n            return (\r\n              <Ionicons\r\n                name={focused ? 'person-outline' : 'person-circle-outline'}\r\n                size={size}\r\n                color={color}\r\n              />\r\n            );\r\n          }\r\n          else if (route.name === 'Settings') {\r\n            return (\r\n              <Ionicons\r\n                name={focused ? 'settings-outline' : 'reorder-four-outline'}\r\n                size={size}\r\n                color={color}\r\n              />\r\n            );\r\n          }\r\n        },\r\n        tabBarInactiveTintColor: 'gray',\r\n        tabBarActiveTintColor: 'skyblue',\r\n      })}\r\n    >\r\n      <Tab.Screen name=\"Home\" component={HomePage}\r\n        options={\r\n          {\r\n            headerRight: () => (\r\n              <SideModal></SideModal>\r\n            )\r\n          }\r\n        } />\r\n      <Tab.Screen name=\"Teams\" options={{headerShown: false}} component={TeamStackScreen} />\r\n      <Tab.Screen name=\"Account\"  component={AccountStackScreen}\r\n        options={\r\n          {\r\n            headerShown: false\r\n          }\r\n        }\r\n      />\r\n      <Tab.Screen name=\"Settings\" component={SettingsPage} />\r\n    </Tab.Navigator>\r\n\r\n  );\r\n}\r\n\r\nexport default AppNavigator;","import { StatusBar } from 'expo-status-bar';\nimport './firebase/firebase';\nimport React, {useState} from 'react';\nimport { StyleSheet } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport AppNavigator from './nav/AppNav';\n\n\nexport default function App() {\n  \n  \n  return (\n\n    <NavigationContainer>\n      <AppNavigator/>\n      <StatusBar style='auto'/>\n    </NavigationContainer>\n\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/Form-Application/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [542], () => (__webpack_require__(9484)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","getAuth","styles","StyleSheet","container","flex","marginTop","backgroundColor","button","paddingHorizontal","paddingVertical","borderRadius","alignSelf","marginHorizontal","marginBottom","minWidth","textAlign","selected","borderWidth","buttonLabel","fontSize","fontWeight","color","selectedLabel","label","row","flexDirection","flexWrap","item","creator","date","width","Dimensions","content","containerA","_useState","useState","_useState2","_slicedToArray","setflexDirection","_useState3","_useState4","website","setWebSite","TabData","_ref","values","selectedValue","setSelectedValue","_jsx","View","style","padding","children","map","value","TouchableOpacity","onPress","console","log","UpdateURI","Text","Platform","_jsxs","WebView","originWhitelist","source","uri","createNativeStackNavigator","justifyContent","alignItems","HomeTopNav","WebImageSelector","images","setImages","res","setRes","_useState5","_useState6","loaded","setLoad","_useState7","_useState8","_LoadImages","_asyncToGenerator","pickImageAsync","apply","arguments","result","ImagePicker","launchImageLibraryAsync","quality","allowsMultipleSelection","selectionLimit","canceled","alert","assets","i","buttonContainer","Pressable","imageContainer","Image","id","image","height","resizeMode","ImageSelector","contentFit","TypeModal","isModalVisible","setModalVisible","type","setType","centeredView","Modal","animationType","transparent","isVisible","onBackdropPress","onRequestClose","Alert","modalView","modalText","Picker","alignContent","onValueChange","itemValue","itemIndex","StoreType","blurredView","margin","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","ElementModal","element","setElement","StoreElement","Selection","Header1","text","_useFonts","useFonts","ShipporiMinchoB1_400Regular","ShipporiMinchoB1_500Medium","ShipporiMinchoB1_600SemiBold","ShipporiMinchoB1_800ExtraBold","fontFamily","WebTeamCreator","imageRef","useRef","onSaveImageAsync","dataUrl","domtoimage","current","link","document","createElement","download","href","click","e","ref","top","TextInput","input","maxLength","mid","ScrollView","Ionicons","name","size","position","bottom","right","scroller","contentContainer","buttonIcon","paddingRight","TeamsDropDown","_MediaLibrary$usePerm","MediaLibrary","usePermissions","_MediaLibrary$usePerm2","status","requestPermission","Date","minDate","setMinDate","setDate","_useState9","_useState10","time","setTime","onShareImageAsync","localUri","captureRef","fileName","split","pop","encodeURI","Sharing","shareAsync","useEffect","today","getDate","getMonth","getFullYear","SafeAreaView","placeholder","DateTimePicker","minimumDate","onChange","event","selectedDate","onChangeText","imageSec","paddingTop","StatusBar","createDrawerNavigator","Button","body","marginLeft","paddingLeft","navigation","isIconVisible","setIconVisible","onSwipeComplete","swipeDirection","animationIn","animationOut","animationInTiming","animationOutTiming","backdropTransitionInTiming","backdropTransitionOutTiming","visible","SignUpModal","createVisible","_React$useState","React","email","password","error","_React$useState2","setValue","OS","keyboardShouldPersistTaps","scrollEnabled","controls","inputBox","containerStyle","control","_objectSpread","leftIcon","Icon","borderBottomLeftRadius","borderBottomRightRadius","borderTopRightRadius","borderTopLeftRadius","webInput","setCreate","toggleModal","auth","signIn","_signIn","signInWithEmailAndPassword","message","secureTextEntry","useAuthentication","user","setUser","unsubscribeFromAuthStatuChanged","onAuthStateChanged","undefined","AccountHome","signOut","accountStack","AccountStackScreen","Navigator","Screen","component","SignInScreen","TeamHomeScreen","main","TeamStack","HomeTeam","navigate","TeamStackScreen","Tab","createBottomTabNavigator","screenOptions","route","tabBarIcon","_ref2","focused","tabBarInactiveTintColor","tabBarActiveTintColor","HomePage","options","headerRight","SideModal","headerShown","SettingsPage","App","NavigationContainer","AppNavigator","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","length","fulfilled","j","Object","keys","every","key","splice","r","n","getter","__esModule","d","a","leafPrototypes","getProto","getPrototypeOf","obj","t","mode","this","then","ns","create","def","indexOf","getOwnPropertyNames","forEach","definition","o","defineProperty","enumerable","get","g","globalThis","Function","window","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","data","moreModules","runtime","some","chunkLoadingGlobal","self","bind","push","__webpack_exports__"],"sourceRoot":""}